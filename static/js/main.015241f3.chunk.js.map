{"version":3,"sources":["App.js","index.js"],"names":["PokemonSuccess","height","weight","sprites","images","Object","entries","filter","map","alt","src","PokemonInfo","name","url","deps","undefined","conditional","React","useState","status","data","error","state","setState","useEffect","fetch","then","Error","json","catch","err","message","useFetch","PokemonCard","setName","placeholder","value","onChange","event","target","toLowerCase","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAkCMA,EAAiB,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAClCC,EAASC,OAAOC,QAAQH,GAASI,QAAO,kBAA4B,kBAA5B,uBAC9C,OACE,2CACWN,EADX,aAC6BC,EAC3B,8BACGE,EAAOI,KAAI,YAAiB,IAAD,mBAAdC,EAAc,KAATC,EAAS,KAC1B,OAAO,qBAAeA,IAAKA,EAAKD,IAAKA,GAApBA,YAOrBE,EAAc,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EA5CjB,SAACC,GAAgD,IAA3CC,EAA0C,4DAAnCC,EAAWC,EAAwB,0DACrCC,IAAMC,SAAS,CACvCC,OAAQ,OACRC,KAAM,KACNC,MAAO,OAJsD,mBACxDC,EADwD,KACjDC,EADiD,KA2B/D,OApBAN,IAAMO,WAAU,WACVR,EACFO,EAAS,CAAEJ,OAAQ,UAGrBI,EAAS,CAAEJ,OAAQ,YAEnBM,MAAMZ,GACHa,MAAK,SAAAN,GACJ,GAAIA,EAAKD,QAAU,IACjB,MAAM,IAAIQ,MAAJ,mCAAsCP,EAAKD,SAEnD,OAAOC,EAAKQ,UAEbF,MAAK,SAAAN,GACJG,EAAS,CAAEJ,OAAQ,WAAYC,YAEhCS,OAAM,SAAAC,GAAG,OAAIP,EAAS,CAAEJ,OAAQ,WAAYE,MAAOS,EAAIC,gBAjB5D,sBAkBOjB,GAlBP,CAkBaD,EAAKG,KAEXM,EAkByBU,CAAS,GAAD,OA/C9B,4BA+C8B,oBAAmBpB,GAAQ,IAAKA,GAAhEO,EADwB,EACxBA,OAAQC,EADgB,EAChBA,KAAMC,EADU,EACVA,MAEtB,GAAe,YAAXF,EACF,OAAO,kDAAqBP,KAE9B,GAAe,aAAXO,EACF,OAAO,4BAAIE,IAEb,GAAe,SAAXF,EACF,OAAO,6DAET,GAAe,aAAXA,IAA0BC,EAC5B,MAAM,IAAIO,MAAJ,uBAA0BR,IAElC,OAAO,cAAC,EAAD,eAAoBC,KAGvBa,EAAc,WAAO,IAAD,EACAhB,IAAMC,SAAS,IADf,mBACjBN,EADiB,KACXsB,EADW,KAGxB,OACE,gCACE,uBACEC,YAAY,qBACZC,MAAOxB,EACPyB,SAAU,SAAAC,GACRJ,EAAQI,EAAMC,OAAOH,MAAMI,kBAG/B,cAAC,EAAD,CAAa5B,KAAMA,QASV6B,MAJf,WACE,OAAO,cAAC,EAAD,KC/ETC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,mB","file":"static/js/main.015241f3.chunk.js","sourcesContent":["import React from 'react';\n\nconst API = 'https://pokeapi.co/api/v2';\n\nconst useFetch = (url, deps = undefined, conditional = false) => {\n  const [state, setState] = React.useState({\n    status: 'idle', // pending, resolved, rejected\n    data: null,\n    error: null,\n  });\n\n  React.useEffect(() => {\n    if (conditional) {\n      setState({ status: 'idle' });\n      return;\n    }\n    setState({ status: 'pending' });\n\n    fetch(url)\n      .then(data => {\n        if (data.status >= 300) {\n          throw new Error(`Fetch failed with status ${data.status}`);\n        }\n        return data.json();\n      })\n      .then(data => {\n        setState({ status: 'resolved', data });\n      })\n      .catch(err => setState({ status: 'rejected', error: err.message }));\n  }, [...deps, url, conditional]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return state;\n};\n\nconst PokemonSuccess = ({ height, weight, sprites }) => {\n  const images = Object.entries(sprites).filter(([, src]) => typeof src === 'string');\n  return (\n    <div>\n      Height: {height}, Weight: {weight}\n      <div>\n        {images.map(([alt, src]) => {\n          return <img key={alt} src={src} alt={alt} />;\n        })}\n      </div>\n    </div>\n  );\n};\n\nconst PokemonInfo = ({ name }) => {\n  const { status, data, error } = useFetch(`${API}/pokemon/${name}`, [], !name);\n\n  if (status === 'pending') {\n    return <p>Fetching pokemon {name}</p>;\n  }\n  if (status === 'rejected') {\n    return <p>{error}</p>;\n  }\n  if (status === 'idle') {\n    return <p>Please enter a pokemon name!</p>;\n  }\n  if (status !== 'resolved' || !data) {\n    throw new Error(`Wrong status ${status}`);\n  }\n  return <PokemonSuccess {...data} />;\n};\n\nconst PokemonCard = () => {\n  const [name, setName] = React.useState('');\n\n  return (\n    <div>\n      <input\n        placeholder=\"Enter pokemon name\"\n        value={name}\n        onChange={event => {\n          setName(event.target.value.toLowerCase());\n        }}\n      />\n      <PokemonInfo name={name} />\n    </div>\n  );\n};\n\nfunction App() {\n  return <PokemonCard />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('⚛️'),\n);\n"],"sourceRoot":""}